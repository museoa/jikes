<!-- DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd" -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><!-- #BeginTemplate "/Templates/DevFAQTemplate.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Jikes Dev FAQ</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../styles/jikes-faq.css">
</head>

<body>
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td style="background-color: #000000"><img src="../images/dev-faq-logo.png" width="150" height="54" alt="Jikes Developer FAQ"></td>
    <td style="background-color: #000000; text-align: right"><img align="right" src="../images/jikes.png" width="600" height="54" alt="Jikes"></td>
  </tr>
  <tr> 
    <td class="NavBar"> 
      <p>&nbsp;</p>
      <!-- The 'align="center"' attribute here is NOT 4.01 Strict compliant
        but is needed to workaround a bug in Gecko (centering table with style
        'text-align: center' doesn't work). Gecko is used by Mozilla and Netscape 6.
        This workaround can be found multiple times in this file.
      -->
      <table border="0" cellspacing="0" cellpadding="10" align="center">
        <tr>
          <td>
        <!-- START INCLUDE NAVBAR.SHTML -->
        <!--#include file="dev-navbar.html" -->
        <!-- END INCLUDE NAVBAR.SHTML -->
          </td>
        </tr>
      </table>
    </td>
    <td class="TopicContent">
      <p>&nbsp;</p>
      <table border="0" cellspacing="10" cellpadding="0" align="center">
        <tr>
          <td><!-- #BeginEditable "TopicContent" --> 
            <h1>Jikes on Win32 </h1>
            <p>This section is quite large, because several options are possible 
              to build a Jikes executable on the Win32 platform (the build process 
              is detailed for three different compilers), and that it also involves 
              tools that are not available by default on it. </p>
            <h2><a name="source-control"></a>Source Control</h2>
            <p>If you choose to use a CVS client instead of just <a href="/developerworks/project/showfiles.php?group_id=10">downloading 
              the source</a>, two CVS clients can be used on the Win32 platform. 
              The first is a command-line version, available in the Cygwin port 
              of the GNU tools, and the second is a Win32 graphical application, 
              WinCvs. You can use both of them, without any distinction.</p>
            <h3>WinCvs</h3>
            <p>The WinCvs tool is a graphical front-end of the command-line CVS 
              client. The GUI offers many convenient controls (right-click menus, 
              for instance), which is quite interesting compared to the command-line 
              CVS client (at least if you're not used to command-line tools). 
              You may find additional information on WinCvs on <a href="http://www.wincvs.org">their 
              Web site</a> or directly into the online help that comes with the 
              tool itself.</p>
            <p>The 1.1b17 release is known to work properly, but previous versions 
              may also work.</p>
            <div style="text-align: center"> 
              <table width="400" border="0" cellspacing="0" cellpadding="1" align="center">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground">WinCvs General 
                          download area:<br>
                          <a href="http://www.wincvs.org/download.html">http://www.wincvs.org/download.html</a><br>
                          <br>
                          Release 1.1b17 available from:<br>
                          <a href="http://download.sourceforge.net/cvsgui/WinCvs11b17.zip">http://download.sourceforge.net/cvsgui/WinCvs11b17.zip</a><br>
                          or:<br>
                          <a href="ftp://ftp.sunet.se/pub/non-gnu/cvsgui/WinCvs11b17.zip">ftp://ftp.sunet.se/pub/non-gnu/cvsgui/WinCvs11b17.zip</a> 
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>The tool comes with the usual Setup that you'll need to run to 
              install the tool.</p>
            <p>Now, you need to configure WinCvs, as any CVS client. This is done 
              by using the Preferences dialog box:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground">Admin / Preferences... 
                          / General:<br>
                          CVSROOT = <code>:pserver:anoncvs@oss.software.ibm.com:/usr/cvs/jikes</code><br>
                          Authentication = <code>&quot;password&quot; file on 
                          the cvs server</code><br>
                          Use version = <code>cvs 1.10 (standard)</code><br>
                          <br>
                          Admin / Preferences... / WinCvs:<br>
                          HOME folder = [choose a directory]</td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>Note: you can use a proxy with WinCvs (Admin / Preferences... / 
              Proxy tab), but be aware that if your proxy doesn't allow to use 
              the CVS protocol, you won't be able to connect to the CVS server 
              (many security admins only allow http and ftp protocols to go through 
              their proxies or firewalls). Just download the release source archive 
              <a href="http://oss.software.ibm.com/developerworks/opensource/cvs/jikes/"></a> 
              instead. For your information, CVS uses its own proprietary protocol 
              over TCP, connected to port 2401.</p>
            <p>Then an optional (though recommended) <code>.cvsrc</code> file 
              can be specified to store CVS-related switches once and for all. 
              This file must be created (if it doesn't already exist) in the HOME 
              folder you specified in the Admin / Preferences... tab. It cannot 
              be created using Windows Explorer directly, because Explorer considers 
              that a file with an extension and without a name (before the extension) 
              is not legal. Use a MS-DOS command as stated below to create it, 
              and then edit it with your favorite text editor, like any other 
              file in Windows.</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground">Type:<br>
                          <code> echo &gt; .cvsrc</code> (in the <code>[HOME folder]</code> 
                          directory)<br>
                          <br>
                          Edit the <code>[HOME folder]/.cvsrc</code> file:<br>
                          <code>cvs -q -z3<br>
                          diff -uN<br>
                          update -P<br>
                          checkout -P</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>You finally have to retrieve the source code of Jikes.</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground">Create / Checkout 
                          module...:<br>
                          Modules names = <code>jikes jacks</code><br>
                          Local folder = <code>[choose a directory]</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>Two directories must now have been created under the local folder 
              you chose: <code>jikes</code> and <code>jacks</code>.</p>
            <h3>Cygwin CVS</h3>
            <p>This command-line version of the CVS client is part of the Cygwin 
              distribution. To get it, just select the '<code>cvs</code>' package 
              in the list of packages when <a href="#installing-cygwin">installing 
              Cygwin</a>. Once the <code>cvs</code> Cygwin package is correctly 
              installed, you may want to setup a few CVS options once and for 
              all. This is done by creating and editing a <code>.cvsrc</code> 
              file in your home directory:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground">Type:<br>
                          <code> cd<br>
                          touch .cvsrc</code><br>
                          <br>
                          Edit the created <code>.cvsrc</code> file:<br>
                          <code>cvs -q -z3<br>
                          diff -uN<br>
                          update -P<br>
                          checkout -P</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>You'll need to run following commands to retrieve Jikes source 
              code.</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"><code>export CVSROOT=:pserver:anoncvs@oss.software.ibm.com:/usr/cvs/jikes</code><br>
                          <code>cvs login</code> (password is &quot;anoncvs&quot;, 
                          without quotes)<br>
                          <code>cvs checkout jikes jacks</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp; </p>
            <h2><a name="installing-cygwin"></a>Installing Cygwin</h2>
            <p>This section is dedicated to Cygwin. The Cygwin tools provide
               the officially supported means of compiling Jikes under Windows.</p>
            <h3>What is Cygwin?</h3>
            <p>Cygwin is a POSIX emulation layer for Windows. It works with Windows
              95, 98, NT, W2K. Cygwin is free software and is licensed under the GPL.</p>
            <p>A Cygwin executable is able to make use of Windows style
              <code>C:\foo</code> or Unix style <code>/tmp</code> paths.
              Cygwin programs rely on <code>cygwin1.dll</code> for this
              functionality, it must be accessible on the <code>PATH</code>.
              Cygwin naturally supports compiling Cygwin executables, but
              it also supports a cross compile mode that provides a way
              to compile a pure Win32 application (one that does not
              depend on <code>cygwin1.dll</code>).

              Unfortunatly, this only works for C executables at the
              moment. Future versions of Cygwin may extend the
              -mno-cygwin support to include C++.</p>
            <h3>How do I install Cygwin?</h3>
            <p>Cygwin provides a simple GUI installer that automatically
              downloads the Cygwin packages and installs them.

              All you need to do is download the installer and run it.</p>
            <h3>Download the Cygwin Installer</h3>
            <p>The first step is to create a directory where the
              downloaded Cygwin files will be saved. This is not
              the directory Cygwin will be installed in,
              it is just used the save the downloaded files.</p>
            <p>Our example install will use the
              <code>D:\download_cygwin</code> directory.</p>
            <p>The next step is to download the installer
              and save it in the <code>D:\download_cygwin</code> directory.</p>
            <p>The installer can be downloaded from one of the many
              <A HREF="http://cygwin.com/mirrors.html">Cygwin Mirror Sites</A>.
              Your download time will be shorter if you select a mirror close to you.
              The installer is named <code>setup.exe</code>, it should
              appear in a directory like <code>.../cygwin/latest/setup.exe</code>.</p>
            <p>Users located in the U.S. may want to use the freesoftware.com mirror in CA:
              <A href="ftp://ftp.freesoftware.com/pub/sourceware/cygwin/latest/setup.exe">ftp://ftp.freesoftware.com/pub/sourceware/cygwin/latest/setup.exe</a></p>
            <p>Watch out! You may have problems behind a firewall that 
              does not allow active FTP sessions. Netscape running
              under Windows NT may appear to "get stuck" downloading
              a file via FTP. If you are having this problem, try a
              HTTP based download of <A HREF="http://cygwin.com/setup.exe">setup.exe</A>.</p>
            <h3>Run the Cygwin Installer</h3>
            <p>Double click on the <code>setup.exe</code> installer you just downloaded
              and choose the <b>Install from Internet</b> option. Press the Next button 
              and you will be asked for a <b>Local package directory</b>. 
              The default value should be <code>D:\download_cygwin</code>, the
              directory the installer was saved in. Since this is the directory
              you want to save downloaded packages in, you can simply press the
              Next button to accept the default.</p>
            <p>You should now see the <b>Select install root directory</b> dialog.
              This is the directory Cygwin will be installed into, the directory
              you enter here will be mapped to the <code>/</code> root directory
              in Cygwin applications. Avoid using a directory name that contains
              spaces if possible. Our example install will use
              <code>D:\Cygwin</code> as the root directory.</p>
            <p>The default for the file type (Unix) is what most users would want.
              If you are installing under NT as the Administrator, you can use
              the install for <b>All</b> option to make Cygwin available to all
              users. If you are installing as a normal user, you will want
              to use the <b>Just me</b> setting. Press Next to continue.</p>
            <p>You will be presented with network connection options.
              Most folks will want to choose the <b>Direct Connection</b>
              option. If you are behind a firewall, you may want to
              select the <b>Use IE Settings</b> option so that the installer
              will use the connection properties from Internet Explorer
              (assuming it's setup correctly). Otherwise, you may need to
              manually enter your sites <b>Use HTTP/FTP proxy</b> options.</p>
            <p>You are now presented with a Cygwin mirror list. If you
              don't know which mirror is closest to you, the
              <code>ftp.freesoftware.com</code> is a reasonable default.</p>
            <p>Once the mirror is selected, a dialog box displays the packages 
              available in the Cygwin distribution. If you are not worried about 
              disk space and have a high-speed connection, just install all
              the packages.

              A full install takes up about 230 Megs of space. If you avoid
              installing some packages, less disk space will be used and
              the download will take less time to complete.</p>
            <p>Here is a list of the Cygwin packages you <b>do not need</b>
              if you are just going to compile Jikes.
              If you have a slow connection, deselecting these
              packages can save a lot of download time.</p>

              <ul>
              <li>bison
              <li>byacc
              <li>cpio
              <li>dejagnu
              <li>expect
              <li>flex
              <li>gperf
              <li>groff
              <li>inetutils
              <li>jbigkit
              <li>jpeg
              <li>libpng
              <li>login
              <li>mt
              <li>mutt
              <li>ncftp
              <li>ncurses
              <li>opengl
              <li>openssh
              <li>openssl
              <li>perl
              <li>popt
              <li>regex
              <li>squid
              <li>tcsh
              <li>tcltk
              <li>tiff
              <li>vim
              <li>wget
              <li>xpm
              </ul>

            <p>Once the package list is selected, press Next to start the
              download and install process.</p>
            <p>Once the installer has downloaded and installed all the packages,
              it will ask you if you want to create a start menu entry and
              a desktop shortcut.</p>
            <p>We suggest adding the start menu entry,
              it would be installed as:</p>
            <p><code>
              Start > Programs > Cygnus Solutions > Cygwin Bash Shell
              </code></p>
            <p>Selecting this menu option will start the Cygwin bash shell.
              UNIX users will already be familliar with the shell interface.
              Windows users should not fear, bash is basically the same as
              a DOS prompt except that it support Cygwin paths by and TAB
              completion by default. To learn more about bash see the following
              <A HREF="http://www.beforever.com/bashtut.htm">Bash Tutorial</a>.</p>
            <h2><a name="cygwin-gcc-mingw-compiling"></a>Compiling with mingw 
              (gcc for Windows)</h2>
            <h3>Installing mingw</h3>
            <p>The following instructions describe the process of building Jikes 
              with gcc and mingw. The resulting <code>jikes.exe</code> executable 
              will run on any Windows machine without the need for additional 
              dlls.</p>
            <p> Cygwin comes with its own version of gcc, but you will not be 
              using that version since it would create an executable that depends 
              on Cygwin. Instead, you'll use mingw.</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground">Download via FTP:<br>
                          <a href="ftp://ftp.nanotech.wisc.edu/pub/khan/gnu-win32/mingw32/snapshots/gcc-2.95.2-1/mingw-msvcrt-20000203.zip">mingw-msvcrt-20000203.zip</a><br>
                          <a href="ftp://ftp.nanotech.wisc.edu/pub/khan/gnu-win32/mingw32/snapshots/gcc-2.95.2-1/binutils-19990818-1-msvcrt.zip">binutils-19990818-1-msvcrt.zip</a><br>
                          <a href="ftp://ftp.nanotech.wisc.edu/pub/khan/gnu-win32/mingw32/snapshots/gcc-2.95.2-1/gcc-2.95.2-1-msvcrt.zip">gcc-2.95.2-1-msvcrt.zip</a><br>
                          or HTTP:<br>
                          <br>
                          <i>Needed</i>: HTTP downloads of these?</td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>These three packages are the mingw runtime libraries, the binutils 
              package (used by the compiler to create binaries), and the last 
              is the gcc compiler.</p>
            <p> Then create a directory (let's call it <code>[mingw dir]</code>) 
              where you'll extract the three archives. Do make sure to extract 
              the packages in the same directory or else you'll have a subdirectory 
              for each zip file, and it won't work properly. If a dialog like 
              "Replace C++filt with new file" pops up while extracting, just hit 
              "Yes to all".</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground">Create the <code>[mingw 
                          dir]</code> directory<br>
                          Extract all the zip files to this same <code>[mingw 
                          dir]</code> directory</td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>The <code>[mingw dir]</code> directory should now contain the following 
              directories:</p>
            <p> 
            <ul>
              <li><code>386-mingw32msvc/</code></li>
              <li> <code>lib/</code></li>
              <li> <code>bin/</code></li>
              <li><code> include/</code></li>
            </ul>
            <p></p>
            <p> You should now be able to run the mingw version of gcc. Check 
              that your output matches the following:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground"> 
                          <p style="text-indent: 0em"><code>cd [mingw dir]\bin</code><br>
                            <code>gcc.exe -v</code></p>
                          <p>Output:</p>
                          <p style="text-indent: 0em"><code>Reading specs from 
                            <br>
                            C:\dev\mingw\bin\..\lib\gcc-lib\i386-mingw32msvc\2.95.2\specs<br>
                            gcc version 2.95.2 19991024 (release)</code></p>
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p> <br>
            </p>
            <h3>Build environment configuration </h3>
            <p>The rest of the process must be run in a Cygwin bash shell.</p>
            <p>Running the <code>configure</code> script of Jikes needs a few 
              extra parameters. First, you need to specify that you want to use 
              the mingw <code>g++</code> instead of the Cygwin version by passing 
              a <code>CXX=...</code> argument to <code>configure</code> (see the 
              general discussion about <a href="dev-compiling.shtml#config-script-args">configuring 
              the build environment</a>). You will also need to pass the "host 
              system" (the environment the final executable runs in) to the <code>configure</code> 
              script since this is a actually cross compile (see <a href="dev-cross-compiling.shtml">cross-compiling 
              Jikes</a> for more information).</p>
            <p><u>Important</u>: replace any backslash ('\') by a slash ('/') 
              in the path to the mingw compiler or the Bash shell won't be able 
              to run it. </p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground"> 
                          <p>In a Cygwin Bash shell:<br>
                            <code>cd [jikes dir]</code><br>
                            <code>./configure --host=mingw32 CXX=[mingw dir with 
                            slashes]/bin/g++</code></p>
                          <p>Output:</p>
                          <p style="text-indent: 0em"><code>...<br>
                            checking build system type... i686-pc-cygwin<br>
                            checking host system type... i386-unknown-mingw32<br>
                            ...</code></p>
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p><u>Note</u>: Don't worry about the initial warning about --host, 
              it is just there to scare off folks that don't know what they are 
              doing :)</p>
            <p>If the output contains two lines similar to these, this is good, 
              it means the <code>configure</code> script correctly detected that 
              the build system (Cygwin) is different from the host system (Mingw).</p>
            <p><u>Remark</u>: Instead of specifying explicitly where is the Mingw 
              compiler (with the <code>CXX</code> flag), you can place the <code>[mingw 
              dir]</code> directory ahead of Cygwin <code>gcc</code> in the <code>PATH</code> 
              (note that the detected host is now &quot;<code>i386-pc-mingw32</code>&quot;):</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"> 
                          <p style="text-indent: 0em"><code>export PATH=[mingw 
                            dir with slashes]/bin:${PATH}<br>
                            cd [jikes dir]<br>
                            ./configure --host=mingw32</code></p>
                          <p>Output:</p>
                          <p style="text-indent: 0em"><code>...<br>
                            checking build system type... i686-pc-cygwin<br>
                            checking host system type... i386-pc-mingw32<br>
                            ...</code> </p>
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp; </p>
            <h3>Building Jikes</h3>
            <p>Now all you need to do is run make and a <code>jikes.exe</code> 
              file will be created for you.</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground"> <code>make</code><br>
                          <br>
                          <code>jikes.exe</code> is created under the src/ directory</td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>You now have a functional Jikes!</p>
            <p> You can verify that the produced jikes.exe does not depend on 
              any Cygwin libraries by running the following command:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"> 
                          <p style="text-indent: 0em"><code>cygcheck jikes.exe</code></p>
                          <p>Output:</p>
                          <p style="text-indent: 0em"><code>Found: .\jikes.exe<br>
                            .\jikes.exe<br>
                            C:\WINNT\System32\KERNEL32.dll<br>
                            C:\WINNT\System32\ntdll.dll<br>
                            C:\WINNT\System32\msvcrt.dll</code></p>
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>This shows that the executable only depends on dlls that are already 
              installed on a Windows system.</p>
            <p><u>Important note</u>: you can't build in a directory other than 
              the <code>src</code> directory with mingw, as stated in <a href="dev-compiling.shtml#build-other-dir">the 
              general compiling section</a>. This is a known issue with Mingw 
              (probably related to paths in POSIX form). The Mingw author is aware 
              of this problem and it sits now in his personal todo list :o).</p>
            <p>&nbsp; </p>
            <h2>Compiling with Cygwin gcc</h2>
            <p>This section explains how to build a Jikes which will run under 
              a Cygwin environment.</p>
            <p>What is &quot;a Cygwin Jikes&quot; ? It means that the generated 
              <code>jikes.exe</code> depends on Cygwin components to run, and 
              more specifically on <code>cygwin1.dll</code>: it will run only 
              on Win32 systems where Cygwin is installed and available in the 
              <code>PATH</code>, or when run from a Cygwin shell.</p>
            <p>The build environment configuration and build process are quite 
              straightforward, as everything is detected automatically for you:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"> 
                          <p>In a Cygwin Bash shell:<br>
                            <code>cd [jikes dir]</code><br>
                            <code>./configure</code></p>
                          <p>Output:</p>
                          <p style="text-indent: 0em"><code>...<br>
                            checking build system type... i686-pc-cygwin<br>
                            checking host system type... i686-pc-cygwin<br>
                            ...</code></p>
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>And finally:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"> <code>make</code><br>
                          <br>
                          <code>jikes.exe</code> is created under the src/ directory</td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <h3>Debugging Jikes with gdb</h3>
            <p>If you are interested in debugging your Cygwin Jikes, you can use 
              the Insight GUI front end to GDB:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"> <code> cd [jikes dir]/src<br>
                          gdb jikes</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>That will start up Insight in GUI mode. If you want to run in plain 
              gdb command line mode just use:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"> <code> gdb -nw jikes</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <h2>Compiling with Microsoft Visual C++</h2>
            <p><i>Not written yet.</i></p>
            <p>Q : Will we provide an automated detection of the msvc platform 
              ? Or should state what to patch individually to do so ?</p>
            <p>Option :</p>
            <p>The 'configure' script uses a 'conftest.cc' file for testing the 
              compiler,<br>
              but VC++ does not recognize such an extension as a C++ source file.<br>
              Fix : don't know yet, there's maybe a way of specifying to MSVC 
              that a<br>
              .cc file is a C++ source file. Hack to make it run : replace 'ac_ext=cc' 
              by<br>
              'ac_ext=cpp' in the script. You need to pass the -TP flag to cl.exe 
              so that it treats the file as C++. This is something that we really 
              need to fix in autoconf. </p>
            <p>Well, it would be better to get it added to autoconf. </p>
            <p>&nbsp; </p>
            <h2>Official Release</h2>
            <p>The Win32 official release of Jikes is not produced on the Win32 
              platform as expected (at least until now). This is done by using 
              a feature of some compilers known as cross-compiling (please refer 
              to the appropriate section to <a href="dev-cross-compiling.shtml">learn 
              about cross-compiling Jikes</a>). It's actually built on a Unix 
              machine, using the <code>gcc</code> compiler with the <code>mingw</code> 
              backend to produce a Win32 binary.</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center" width="400">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"><i>Needed</i>: what's 
                          the exact command line to build Jikes for the Win32 
                          platform ? -O3 is used for optimisation, but what about 
                          symbol stripping? </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>However, building Jikes with the same <code>gcc</code> and <code>mingw</code> 
              combination running on the Win32 platform (as described <a href="#cygwin-gcc-mingw-compiling">here</a>) 
              is perfectly valid (it's still a cross-compile, but the build is 
              Cygwin instead of Unix). You don't need to reproduce the exact same 
              hardware and software environment to generate a Jikes compiler as 
              reliable as the official one (except for the modifications you may 
              bring to the source code, of course!).</p>
            <p>&nbsp; </p>
            <!-- #EndEditable --></td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>
