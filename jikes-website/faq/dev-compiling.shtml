<!-- DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd" -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><!-- #BeginTemplate "/Templates/DevFAQTemplate.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>Jikes Dev FAQ</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../styles/jikes-faq.css">
</head>

<body>
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td style="background-color: #000000"><img src="../images/dev-faq-logo.png" width="150" height="54" alt="Jikes Developer FAQ"></td>
    <td style="background-color: #000000; text-align: right"><img align="right" src="../images/jikes.png" width="600" height="54" alt="Jikes"></td>
  </tr>
  <tr> 
    <td class="NavBar"> 
      <p>&nbsp;</p>
      <!-- The 'align="center"' attribute here is NOT 4.01 Strict compliant
        but is needed to workaround a bug in Gecko (centering table with style
        'text-align: center' doesn't work). Gecko is used by Mozilla and Netscape 6.
        This workaround can be found multiple times in this file.
      -->
      <table border="0" cellspacing="0" cellpadding="10" align="center">
        <tr>
          <td>
        <!-- START INCLUDE NAVBAR.SHTML -->
        <!--#include file="navbar.html" -->
        <!-- END INCLUDE NAVBAR.SHTML -->
          </td>
        </tr>
      </table>
    </td>
    <td class="TopicContent">
      <p>&nbsp;</p>
      <table border="0" cellspacing="10" cellpadding="0" align="center">
        <tr>
          <td><!-- #BeginEditable "TopicContent" --> 
            <h1>Compiling</h1>
            <h2>Compile chain</h2>
            <p>To compile Jikes, you'll need a shell, a GNU make and a compiler 
              (can be the GNU one). Note that it's possible to use integrated 
              development environments (see the section related to your platform 
              to see if somebody has already done the work for you), but the build 
              configuration step is mandatory in any case.</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" align="center">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground"> Install or check 
                          the tools below:<br>
                          <br>
                          Needed: list of tools (make, ...) / required minimum 
                          versions??? </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <p>Additional development tools from GNU will be needed if you plan 
              to do more than just compiling Jikes (autoconf, automake...). The 
              online documentation for these tools can be found at <a href="http://www.gnu.org/manual/">http://www.gnu.org/manual/</a>.</p>
            <p>&nbsp;</p>
            <h2><a name="build-env-config"></a>Build environment configuration</h2>
            <p>Jikes uses an autoconf/automake script, <code>configure</code>, 
              which goal is to detect automatically the capabilities of your platform, 
              and set the appropriate flags. The <code>configure</code> script 
              is available at the root of the Jikes source tree.</p>
            <p>This script will run several tests and basically creates two important 
              files:</p>
            <p> 
            <ul>
              <li><code>config.h</code>: contains the flags set by the script. 
                This file is included when compiling (used to enable the appropriate 
                #ifdef sections in the source code).</li>
              <li><code>Makefile</code>: created where you invoke the <code>configure</code> 
                script. Used by the <code>make</code> tool to compile Jikes.</li>
            </ul>
            <p></p>
            <p>The easiest way to configure the build environment is to invoke 
              the <code>configure</code> script from the jikes root directory: 
              the <code>Makefile</code> will be created in this same directory, 
              and the <code>config.h</code> file in the <code>src/</code> directory.</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" width="400" align="center">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground"> in the root dir 
                          of Jikes:<br>
                          <code>./configure</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <p>If the <code>configure</code> script does run properly or crashes, 
              it produces a log file (<code>config.log</code>) that you can use 
              to see what test failed or crashed. It's especially useful when 
              trying to compile Jikes on a new platform which is not properly 
              handled by the script and which requires extra parameters. It's 
              also a good starting point when posting about <code>configure</code>-related 
              problems in the mailing list.</p>
            <p>&nbsp;</p>
            <h2><a name="config-script-args"></a>Configure script arguments</h2>
            <p>The <code>configure</code> script accepts many arguments, even 
              if most of the time it's invoked without any. You can have the entire 
              list by typing:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" width="400" align="center">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground">./configure --help</td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <p>The most frequently used are:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" width="400" align="center">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"><code>CXX=</code>[C++ 
                          compiler]<br>
                          <code>CXXFLAGS=</code>[C++ compiler flags]<br>
                          <code>CPPFLAGS=</code>[C++ preprocessor flags]<br>
                          <code>--host</code>=[host platform] and<br>
                          <code>--build</code>=[targetted platform] (cross-compiling)</td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <h2><a name="build-other-dir"></a>Building in a different directory</h2>
            <p>If you want to have the object files (.o) and jikes executable 
              created in a separate directory (somewhat more clean to separate 
              source code and objet files; also useful when having more than one 
              build configuration), just go to the wanted directory and invoke 
              the <code>configure</code> script from there. The files will be 
              created under this directory, including the <code>Makefile</code> 
              that you'll invoke later.</p>
            <p>&nbsp;</p>
            <h2>C++ Namespaces support</h2>
            <p>Jikes source code is now C++ namespace compliant, which means that 
              compilers which allow namespaces can be used to compile Jikes. This 
              is normally automatically detected by the <code>configure</code> 
              script, but you can force it by specifying the following additional 
              parameter if not properly detected:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" width="400" align="center">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"><code>./configure HAVE_NAMESPACES=1</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <p>In addition to this, an extra parameter may be needed depending 
              on your compiler and your needs: when switched on, every class, 
              method and variable is declared inside the <code>Jikes</code> namespace 
              (useful if one of Jikes-defined names collide with an external library, 
              or if your compiler is a bit touchy about namespaces):</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" width="400" align="center">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"><code>./configure HAVE_JIKES_NAMESPACE=1</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <p><u>Note:</u> <code>HAVE_JIKES_NAMESPACE</code> must not be specified 
              if your compiler does not support namespaces (or if <code>configure</code> 
              did not detect its supports it and you did not force it as shown 
              above by using <code>HAVE_NAMESPACES</code>), or you'll get nasty 
              compiling errors ;o)</p>
            <p>&nbsp;</p>
            <h2>Building Jikes</h2>
            <p>Once the <code>Makefile</code> has been created, you can invoke 
              it:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" width="400" align="center">
                <tr> 
                  <td class="HighlightedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="HighlightedFrameBackground"> <code>./make</code><br>
                          <code>jikes</code> is generated in <code>src/</code> 
                          directory</td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <p>The compiler will be invoked on each source file of Jikes, and 
              then the linker will produce the <code>jikes</code> executable file 
              in the <code>src/</code> directory. <b>Congratulation, Jikes is 
              now ready to run!</b></p>
            <p>The generated <code>Makefile</code> accepts many targets (just 
              have a look at it, you'll understand), but the most frequently used 
              is definetly the one used to clean the build directory from any 
              generated file by invoking:</p>
            <div style="text-align: center"> 
              <table border="0" cellspacing="0" cellpadding="1" width="400" align="center">
                <tr> 
                  <td class="DimmedFrameBorder"> 
                    <table width="100%" border="0" cellspacing="0" cellpadding="10">
                      <tr> 
                        <td class="DimmedFrameBackground"><code>./make clean</code></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </div>
            <p>&nbsp;</p>
            <!-- #EndEditable --></td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
<!-- #EndTemplate --></html>
