<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
  <head>
    <TITLE>Jikes - Concurrent Versions System Beginners' Introduction</TITLE>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  </head>
  <BODY bgcolor="#ffffff">
    <p align="center"><img src="images/jikes.png" width=600 height=54 border=0 alt="Jikes"><BR>&nbsp;</p>


<h1>CVS: Concurrent Versions System</h1>
<p>CVS is a system that lets groups of people work simultaneously on groups of files. CERN has a Web site with <a href="http://wwwinfo.cern.ch/asd/cvs/">general information on CVS</a>. CVS provides a network-transparent way for developers to share source control management. It is the most widely used open-source version control software. For more information on CVS, please see the <a href="http://cvshome.org">CVS Web site</a>.</p>

<h2>WebCvs for browsing source code and easy downloads</h2>
<p>If you want to browse the code and only make occasional downloads, you may want to use <a href="/developerworks/opensource/cvs/jikes">WebCVS</a>. It provides a convenient, Web-based interface for browsing and downloading the latest version of the source code and documentation. You can also view each file's revision history, display the differences between individual revisions, determine which revisions were part of which official release, and more.</p>

<h2>CVS clients for advanced source code manipulation</h2>
<p>If you will be doing serious work on the source code, you should probably install a CVS client on your own machine so that you can do batch operations without going through the WebCVS interface. On Windows, we suggest the <a href="http://www.wincvs.org">WinCVS client</a>. For UNIX users, select the <a href="http://www.cvshome.org/dev/codelinux.html">appropriate client</a>. An alternative environment for those working on windows but more comfortable with a POSIX environment (like Unix) is the <a href="http://sources.redhat.com/cygwin/">Cygwin</a> tool-chain which includes CVS as well as bash, the GNU C/C++ compiler, linker, and debugger, and some common libraries.</p>

<h3>Example commands to create a local replica of the master source tree</h3>
<p>First you'll need to setup the correct environment for CVS, this is platform dependent, so first in a POSIX environment try:
<pre>
<code>
setenv CVSROOT :pserver:anoncvs@www-124.ibm.com:/usr/cvs/jikes
</code>
</pre>
or
<pre>
<code>
CVSROOT=:pserver:anoncvs@www-124.ibm.com:/usr/cvs/jikes; export CVSROOT
</code>
</pre>
Note that the exact syntax of the setenv command is shell specific. :(<br>

If you are a Windows user, you may want to do something like:
<pre>
<code>
set CVSROOT=:pserver:anoncvs@www-124.ibm.com:/usr/cvs/jikes
set homedrive=c:
set homepath=\cvs
</code>
</pre>


<p>Now that the environment is correctly configured, you'll need to log into the cvs server, both the userid and server name are stored in the CVSROOT variable, and are "anoncvs" and "www-124.ibm.com" respectively. Most all command line cvs programs will accept the following command:

<pre>
<code>
cvs login
</code>
</pre>

The password is "anoncvs" (without the quotes), just like the userid.

<p>The next step is to extract a copy of the modules you are interested in, again this is common to all command line oriented cvs programs. The following will extract the sources and build environment for the Jikes Project:

<pre>
<code>
cvs checkout jikes
</code>
</pre>

The following will extract the sources and documentation for our sister project: "Jacks". You'll want to look at this if you plan to submit a bug report as few bugs are solved without a recreatable testcase, or a patch as very few patches are accepted without a regression test (which can often be the testcase for the bug you're patching)

<pre>
<code>
cvs checkout jacks
</code>
</pre>

At this point you should have a jikes directory and/or a jacks directory in your current working directory which contains an exact copy of the current source tree for either project. In the future you can update your copy of the tree by changing into the directory in question and issuing the following command:

<pre>
<code>
cvs update
</code>
</pre>

You will not need to re-establish the CVSROOT, as it will be stored in the data that is extracted; similarly you should not need to re-login either; however, your cvs client may not maintain the login status.

<h1>Additional CVS Resources:</h1>
<ul>
<li><a href="/developerworks/cvs/os-cvs.php?group_id=10">Common CVS Operations and Tips: customized for this Project</a></li>
<li><a href="http://www.loria.fr/~molli/cvs/doc/cvs_toc.html">Version Management with CVS</a></li>
<li><a href="http://www.computas.com/pub/wincvs-howto/">WinCvs -- Daily Use Guide</A></li>
</ul>

    <!--#include file="footer.shtml" -->
  </BODY>
</HTML>
