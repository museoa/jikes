bin_PROGRAMS = jikes

jikes_SOURCES = \
ast.cpp \
body.cpp \
bytecode.cpp \
case.cpp \
code.cpp \
control.cpp \
decl.cpp \
definite.cpp \
depend.cpp \
diagnose.cpp \
double.cpp \
dump.cpp \
error.cpp \
expr.cpp \
getclass.cpp \
incrmnt.cpp \
init.cpp \
javaact.cpp \
jikes.cpp \
jikesapi.cpp \
long.cpp \
lookup.cpp \
lpginput.cpp \
modifier.cpp \
op.cpp \
option.cpp \
parser.cpp \
platform.cpp \
scanner.cpp \
segment.cpp \
set.cpp \
stream.cpp \
symbol.cpp \
system.cpp \
tab.cpp \
unparse.cpp \
unzip.cpp \
zip.cpp

include_HEADERS = \
jikesapi.h

noinst_HEADERS = \
access.h \
ast.h \
bytecode.h \
case.h \
class.h \
code.h \
control.h \
depend.h \
diagnose.h \
double.h \
error.h \
getclass.h \
javaact.h \
javadcl.h \
javadef.h \
javaprs.h \
javasym.h \
jikesapi.h \
long.h \
lookup.h \
lpginput.h \
op.h \
option.h \
parser.h \
platform.h \
scanner.h \
segment.h \
semantic.h \
set.h \
spell.h \
stream.h \
symbol.h \
tab.h \
table.h \
tuple.h \
unzip.h \
zip.h

# Include the java.g and gencode.java files in the .tar ball

EXTRA_DIST = java.g gencode.java

if MAINTAINER_MODE
# Special rules to remake autogenerated files
PARSER_FILES = \
javaact.cpp \
javaact.h \
javadcl.h \
javadef.h \
javaprs.h \
javasym.h

BUILT_SOURCES = $(PARSER_FILES) code.cpp code.h

$(PARSER_FILES): java.g $(JIKESPG)
	$(JIKESPG) java.g
	rm -f java.l

# FIXME: hardcoded at the moment, makes bootstrap difficult...
JAVA = java
JAVAC = jikes
code.cpp code.h: gencode.java
	$(JAVAC) $<
	$(JAVA) gencode

# end special maintainer mode section
endif


# This rule will build an efence malloc debugging enabled version of jikes.
# This should be used for testing purposes only! It is really slow!

efence:
	@rm -f jikes$(EXEEXT)
	$(CXXLINK) -o jikes$(EXEEXT) $(jikes_OBJECTS) -lstdc++ -lefence


# The rest of the entries in this file are dependencies
# manually extracted from the .h and .cpp files; I used g++ 2.95.3,
# compiling with -MM, then replacing .o with .$(OBJEXT).
#
# We choose not use the automatic dependency tracking available in
# automake because the depcomp script still has some
# portability problems with non-gcc compilers. If
# dependencies are changed in the source code, these
# deps will need to be manually updated.

$(jikes_OBJECTS): config.h

ast.$(OBJEXT): ast.cpp ast.h platform.h tuple.h jikesapi.h stream.h javadef.h \
 javasym.h tab.h lookup.h long.h double.h symbol.h code.h option.h \
 depend.h access.h case.h set.h
body.$(OBJEXT): body.cpp platform.h tuple.h jikesapi.h semantic.h ast.h \
 stream.h javadef.h javasym.h tab.h lookup.h long.h double.h symbol.h \
 code.h option.h depend.h access.h case.h set.h diagnose.h parser.h \
 lpginput.h javaprs.h javaact.h error.h control.h
bytecode.$(OBJEXT): bytecode.cpp bytecode.h platform.h tuple.h jikesapi.h \
 ast.h stream.h javadef.h javasym.h tab.h lookup.h long.h double.h \
 symbol.h code.h option.h depend.h access.h case.h set.h class.h \
 semantic.h diagnose.h parser.h lpginput.h javaprs.h javaact.h error.h \
 control.h op.h segment.h table.h
case.$(OBJEXT): case.cpp case.h platform.h tuple.h jikesapi.h
code.$(OBJEXT): code.cpp code.h platform.h tuple.h jikesapi.h
control.$(OBJEXT): control.cpp control.h platform.h tuple.h jikesapi.h \
 option.h code.h symbol.h stream.h javadef.h javasym.h tab.h lookup.h \
 long.h double.h depend.h access.h case.h set.h scanner.h parser.h \
 lpginput.h javaprs.h javaact.h semantic.h ast.h diagnose.h error.h \
 bytecode.h class.h op.h segment.h
decl.$(OBJEXT): decl.cpp platform.h tuple.h jikesapi.h semantic.h ast.h \
 stream.h javadef.h javasym.h tab.h lookup.h long.h double.h symbol.h \
 code.h option.h depend.h access.h case.h set.h diagnose.h parser.h \
 lpginput.h javaprs.h javaact.h error.h control.h table.h spell.h
definite.$(OBJEXT): definite.cpp platform.h tuple.h jikesapi.h semantic.h \
 ast.h stream.h javadef.h javasym.h tab.h lookup.h long.h double.h \
 symbol.h code.h option.h depend.h access.h case.h set.h diagnose.h \
 parser.h lpginput.h javaprs.h javaact.h error.h control.h
depend.$(OBJEXT): depend.cpp depend.h platform.h tuple.h jikesapi.h control.h \
 option.h code.h symbol.h stream.h javadef.h javasym.h tab.h lookup.h \
 long.h double.h access.h case.h set.h ast.h semantic.h diagnose.h \
 parser.h lpginput.h javaprs.h javaact.h error.h
diagnose.$(OBJEXT): diagnose.cpp diagnose.h platform.h tuple.h jikesapi.h \
 parser.h lpginput.h stream.h javadef.h javasym.h tab.h lookup.h \
 long.h double.h javaprs.h javaact.h control.h option.h code.h \
 symbol.h depend.h access.h case.h set.h semantic.h ast.h error.h \
 spell.h
double.$(OBJEXT): double.cpp double.h platform.h tuple.h jikesapi.h long.h
dump.$(OBJEXT): dump.cpp platform.h tuple.h jikesapi.h javasym.h control.h \
 option.h code.h symbol.h stream.h javadef.h tab.h lookup.h long.h \
 double.h depend.h access.h case.h set.h
error.$(OBJEXT): error.cpp error.h platform.h tuple.h jikesapi.h stream.h \
 javadef.h javasym.h tab.h lookup.h long.h double.h control.h option.h \
 code.h symbol.h depend.h access.h case.h set.h semantic.h ast.h \
 diagnose.h parser.h lpginput.h javaprs.h javaact.h
expr.$(OBJEXT): expr.cpp platform.h tuple.h jikesapi.h double.h long.h \
 parser.h lpginput.h stream.h javadef.h javasym.h tab.h lookup.h \
 javaprs.h javaact.h semantic.h ast.h symbol.h code.h option.h \
 depend.h access.h case.h set.h diagnose.h error.h control.h table.h \
 spell.h
getclass.$(OBJEXT): getclass.cpp getclass.h platform.h tuple.h jikesapi.h \
 semantic.h ast.h stream.h javadef.h javasym.h tab.h lookup.h long.h \
 double.h symbol.h code.h option.h depend.h access.h case.h set.h \
 diagnose.h parser.h lpginput.h javaprs.h javaact.h error.h control.h \
 zip.h unzip.h
incrmnt.$(OBJEXT): incrmnt.cpp platform.h tuple.h jikesapi.h control.h \
 option.h code.h symbol.h stream.h javadef.h javasym.h tab.h lookup.h \
 long.h double.h depend.h access.h case.h set.h scanner.h parser.h \
 lpginput.h javaprs.h javaact.h semantic.h ast.h diagnose.h error.h
init.$(OBJEXT): init.cpp platform.h tuple.h jikesapi.h semantic.h ast.h \
 stream.h javadef.h javasym.h tab.h lookup.h long.h double.h symbol.h \
 code.h option.h depend.h access.h case.h set.h diagnose.h parser.h \
 lpginput.h javaprs.h javaact.h error.h control.h
javaact.$(OBJEXT): javaact.cpp platform.h tuple.h jikesapi.h parser.h \
 lpginput.h stream.h javadef.h javasym.h tab.h lookup.h long.h \
 double.h javaprs.h javaact.h ast.h symbol.h code.h option.h depend.h \
 access.h case.h set.h
jikes.$(OBJEXT): jikes.cpp platform.h tuple.h jikesapi.h
jikesapi.$(OBJEXT): jikesapi.cpp platform.h tuple.h jikesapi.h control.h \
 option.h code.h symbol.h stream.h javadef.h javasym.h tab.h lookup.h \
 long.h double.h depend.h access.h case.h set.h
long.$(OBJEXT): long.cpp long.h platform.h tuple.h jikesapi.h double.h
lookup.$(OBJEXT): lookup.cpp lookup.h platform.h tuple.h jikesapi.h long.h \
 double.h control.h option.h code.h symbol.h stream.h javadef.h \
 javasym.h tab.h depend.h access.h case.h set.h ast.h
lpginput.$(OBJEXT): lpginput.cpp lpginput.h platform.h tuple.h jikesapi.h \
 stream.h javadef.h javasym.h tab.h lookup.h long.h double.h javaprs.h \
 javadcl.h
modifier.$(OBJEXT): modifier.cpp platform.h tuple.h jikesapi.h semantic.h \
 ast.h stream.h javadef.h javasym.h tab.h lookup.h long.h double.h \
 symbol.h code.h option.h depend.h access.h case.h set.h diagnose.h \
 parser.h lpginput.h javaprs.h javaact.h error.h control.h
op.$(OBJEXT): op.cpp op.h platform.h tuple.h jikesapi.h
option.$(OBJEXT): option.cpp option.h platform.h tuple.h jikesapi.h code.h \
 javasym.h error.h stream.h javadef.h tab.h lookup.h long.h double.h \
 case.h
parser.$(OBJEXT): parser.cpp parser.h platform.h tuple.h jikesapi.h \
 lpginput.h stream.h javadef.h javasym.h tab.h lookup.h long.h double.h \
 javaprs.h javaact.h ast.h symbol.h code.h option.h depend.h access.h case.h \
 set.h
platform.$(OBJEXT): platform.cpp platform.h tuple.h jikesapi.h long.h double.h
scanner.$(OBJEXT): scanner.cpp scanner.h platform.h tuple.h jikesapi.h code.h \
 javadef.h javasym.h stream.h tab.h lookup.h long.h double.h control.h \
 option.h symbol.h depend.h access.h case.h set.h error.h
segment.$(OBJEXT): segment.cpp segment.h platform.h tuple.h jikesapi.h
set.$(OBJEXT): set.cpp set.h platform.h tuple.h jikesapi.h symbol.h code.h \
 stream.h javadef.h javasym.h tab.h lookup.h long.h double.h option.h \
 depend.h access.h case.h
stream.$(OBJEXT): stream.cpp stream.h platform.h tuple.h jikesapi.h javadef.h \
 javasym.h tab.h lookup.h long.h double.h code.h zip.h unzip.h \
 symbol.h option.h depend.h access.h case.h control.h set.h semantic.h \
 ast.h diagnose.h parser.h lpginput.h javaprs.h javaact.h error.h
symbol.$(OBJEXT): symbol.cpp symbol.h platform.h tuple.h jikesapi.h code.h \
 stream.h javadef.h javasym.h tab.h lookup.h long.h double.h option.h \
 depend.h access.h case.h control.h set.h ast.h semantic.h diagnose.h \
 parser.h lpginput.h javaprs.h javaact.h error.h table.h zip.h unzip.h
system.$(OBJEXT): system.cpp platform.h tuple.h jikesapi.h control.h option.h \
 code.h symbol.h stream.h javadef.h javasym.h tab.h lookup.h long.h \
 double.h depend.h access.h case.h set.h semantic.h ast.h diagnose.h \
 parser.h lpginput.h javaprs.h javaact.h error.h zip.h unzip.h
tab.$(OBJEXT): tab.cpp tab.h platform.h tuple.h jikesapi.h
unparse.$(OBJEXT): unparse.cpp ast.h platform.h tuple.h jikesapi.h stream.h \
 javadef.h javasym.h tab.h lookup.h long.h double.h symbol.h code.h \
 option.h depend.h access.h case.h set.h
unzip.$(OBJEXT): unzip.cpp unzip.h platform.h tuple.h jikesapi.h
zip.$(OBJEXT): zip.cpp zip.h platform.h tuple.h jikesapi.h unzip.h control.h \
 option.h code.h symbol.h stream.h javadef.h javasym.h tab.h lookup.h \
 long.h double.h depend.h access.h case.h set.h
