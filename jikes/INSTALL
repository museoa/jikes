To compile Jikes:

./configure ; make ; make install

Note: If you run Windows, you will need to
download, install, and run Cygwin's bash
shell before you can run ./configure.
ftp://ftp.freesoftware.com/pub/sourceware/cygwin/latest/setup.exe

If you want to install jikes into a directory
other than the default of /usr/local, pass
a --prefix argument to the ./configure script.

If you want to get fancy, you can even build
jikes in a directory other than the source
directory. This is really handy if you
are doing multiple builds or building for
multiple architectures.

(assume you are starting in the jikes directory)
cd ..

mkdir build_linux_debug ; cd build_linux_debug

../jikes/configure --prefix=/tmp/jikes_debug CFLAGS=-g
make


mkdir build_linux_opt ; cd build_linux_opt

../jikes/configure --prefix=/tmp/jikes_opt CFLAGS="-O6 -fomit-frame-pointer"
make


You can even cross compile jikes for another architecture
with a Gnu cross compiler. In the following example,
we cross compile jikes for Windows on a Linux box
using the mingw cross compiler (i386-mingw32msvc-c++).

mkdir build_mingw ; cd build_mingw
../jikes/configure --prefix=/tmp/jikes_Xmingw --host=i386-mingw32msvc

If you modify any of the files used by the autotools build
process (Makefile.am, configure.in, and so on), you will
need to run the ./autogen.sh script to generate a new
./configure script. The autogen.sh requires that you
have an up to date set of Gnu autotools installed.
